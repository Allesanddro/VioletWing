name: Build and Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag for the release'
        required: true
        default: 'v1.0.0'
      release_name:
        description: 'Name of the release'
        required: true
        default: 'CS2 TriggerBot - Release v1.0.0'

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12.5'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Package Application
      run: |
        pyinstaller --noconfirm --onefile --windowed --icon "src\img\icon.ico" --name "CS2.Triggerbot" --version-file "version.txt" --add-data "classes;classes/" --add-data "src/img/*;src/img" "main.py"

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: CS2_Triggerbot
        path: dist/CS2.Triggerbot.exe

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Read ChangeLog
      id: changelog
      run: |
        if [ -f ChangeLog.md ]; then
          echo "changelog=$(cat ChangeLog.md)" >> $GITHUB_ENV
        else
          echo "changelog=No changelog available." >> $GITHUB_ENV
        fi

    - name: Download Build Artifact
      uses: actions/download-artifact@v4
      with:
        name: CS2_Triggerbot

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.event.inputs.tag_name }}
        release_name: ${{ github.event.inputs.release_name }}
        body: ${{ env.changelog }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/CS2.Triggerbot.exe
        asset_name: CS2.Triggerbot.exe
        asset_content_type: application/octet-stream
